
getwd()

setwd("C:/U")


getwd()

rb_data_raw=read.csv("RB-Consolidated Data 30 May 2017.csv")

str(rb_data_raw)
colnames(rb_data_raw)

selected_fields<-c("Indicator.Type",
                   "Title",
                   "Applicable.Countries...Location",
                   "Country.Specific.Checks",
                   "Frequency",
                   "Can.the.samples.be.stored.Digitally...Yes.No..",
                   "Test.performed.by.Full.Time..Part.Time.or.Contract.Staff.",
                   "Is.the.test.Generic.or.does.it.require.a.Skilled.resource.to.perform.it.",
                   "Time.spent.every.time.the.test.is.performed...in.minutes."
                   )
new_named_fields<-c("Indicator.Type",
              "Title",
              "Countries",
              "Country.Specific.Checks",
              "Frequency",
              "stored.Digitally",
              "FullPartTime",
              "GenericSkilled",
              "TimeSpent"
              )

rb_data_selected<-rb_data_raw[,selected_fields]

colnames(rb_data_selected)<-new_named_fields

str(rb_data_selected)

#====================Preparing the timeSpent
rb_data_selected_newTime<-rb_data_selected[,"TimeSpent"]






t<-rb_data_selected_newTime

#==========Change hour to 60 mins==============

extra_words1<-c(" hours", 
               "hours",
               " Hours", 
               "Hours",
               " hour", 
               "hour",
               " Hour", 
               "Hour"
               )

hour_indices<-which(grepl("hour",t))
hour_indices
for (b in hour_indices){
  for(c in extra_words1) #should only happen once so the order of extra words matters
  {
    print(b)
    t[b]<-gsub(c, "",t[b])
  }
  t[b]=as.numeric(t[b])*60
}


##to remove the extra characters
extra_words2<-c(" minutes", ##start from full words and then substrings
               "minutes",
               " Minutes",
               "Minutes",
               " mins",
               "mins",
               " Mins",
               "Mins",
               " min",
               "min",
               " Approx",
               "Approx"
               )

for (c in extra_words)
{
  t<-gsub(c, "", t)
}



# get the total number after "="
equalSign_indices<-which(grepl("=",t))
t[equalSign_indices]<-as.numeric(strsplit(t[equalSign_indices],"=")[[1]][2])

# get the numbers before new line
newLineSign_indices<-which(grepl("\n",t))
t[newLineSign_indices]<-as.numeric(strsplit(t[newLineSign_indices],"\n")[[1]][1])

# get the numbers before dash
dashSign_indices<-which(grepl(" -",t))
t[dashSign_indices]<-as.numeric(strsplit(t[dashSign_indices]," -")[[1]][1])

#==extract  the numeric indices to be used for next steps
numeric_indices<-sapply(as.numeric(as.character(t)), function(x) is.numeric(x) & !is.na(x))
tt<-t[!numeric_indices]

length(t) #3795
length(tt) #318


rb_data_selected[numeric_indices,"RevisedTimeSpent"]<-t[numeric_indices]

head(rb_data_selected[numeric_indices,"RevisedTimeSpent"],200)


rb_data_selected_revised<-rb_data_selected[numeric_indices, !names(rb_data_selected) %in% c("TimeSpent")]
rb_data_selected_revised$RevisedTimeSpent<-as.numeric(rb_data_selected_revised$RevisedTimeSpent)

str(rb_data_selected_revised)

table(rb_data_selected_revised$Countries)

aggregate(RevisedTimeSpent ~ Countries,
  data=rb_data_selected_revised, FUN="sum")

aggregate(RevisedTimeSpent ~ Countries + Indicator.Type,
          data=rb_data_selected_revised, FUN="sum")


with(rb_data_selected_revised, table(Countries,Indicator.Type))

aggregate(RevisedTimeSpent ~ Countries + Indicator.Type,
          data=rb_data_selected_revised, FUN="sum")


str(rb_data_selected_revised)

table(rb_data_selected_revised$Title)

avg_time_by_title_type<-aggregate(RevisedTimeSpent ~ Title+Indicator.Type,
          data=rb_data_selected_revised, FUN="sum")

#==sort by review time

avg_time_by_title_type_sorted<-avg_time_by_title_type[order(avg_time_by_title_type$Indicator.Type, 
                                                            -avg_time_by_title_type$RevisedTimeSpent),]


write.csv(avg_time_by_title_type_sorted,"t.csv")


avg_time_by_type<-aggregate(RevisedTimeSpent ~ Indicator.Type,
                                  data=rb_data_selected_revised, FUN="sum")
avg_time_by_type



